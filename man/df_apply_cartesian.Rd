% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parallel.R
\name{df_apply_cartesian}
\alias{df_apply_cartesian}
\title{Generate Cartesian Product and Apply Function Rowwise}
\usage{
df_apply_cartesian(
  ...,
  func,
  result_col = "result",
  startup_function = NULL,
  complete_function = NULL,
  seed = 123,
  parallel = FALSE,
  cores = 1
)
}
\arguments{
\item{...}{Vectors or lists to create the Cartesian product from.}

\item{func}{A function to apply to each row of the data frame.}

\item{result_col}{The name of the new column to store the results.}

\item{startup_function}{An optional function to run before processing starts.}

\item{complete_function}{An optional function to run after each row is processed.}

\item{seed}{An integer seed for reproducibility.}

\item{parallel}{A logical value indicating whether to run the processing in parallel.}

\item{cores}{An integer specifying the number of cores to use for parallel processing.}
}
\value{
A data frame with the results stored in a new column.
}
\description{
This function generates a Cartesian product of the input vectors or lists, applies a specified function to each row, and stores the results in a new column.
}
